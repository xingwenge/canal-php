<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: EntryProtocol.proto

namespace Com\Alibaba\Otter\Canal\Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **开始事务的一些信息*
 *
 * Generated from protobuf message <code>com.alibaba.otter.canal.protocol.TransactionBegin</code>
 */
class TransactionBegin extends \Google\Protobuf\Internal\Message
{
    /**
     **已废弃，请使用header里的executeTime*
     *
     * Generated from protobuf field <code>int64 executeTime = 1;</code>
     */
    protected $executeTime = 0;
    /**
     **已废弃，Begin里不提供事务id*
     *
     * Generated from protobuf field <code>string transactionId = 2;</code>
     */
    protected $transactionId = '';
    /**
     **预留扩展*
     *
     * Generated from protobuf field <code>repeated .com.alibaba.otter.canal.protocol.Pair props = 3;</code>
     */
    private $props;
    /**
     **执行的thread Id*
     *
     * Generated from protobuf field <code>int64 threadId = 4;</code>
     */
    protected $threadId = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $executeTime
     *          *已废弃，请使用header里的executeTime*
     *     @type string $transactionId
     *          *已废弃，Begin里不提供事务id*
     *     @type array<\Com\Alibaba\Otter\Canal\Protocol\Pair>|\Google\Protobuf\Internal\RepeatedField $props
     *          *预留扩展*
     *     @type int|string $threadId
     *          *执行的thread Id*
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\EntryProtocol::initOnce();
        parent::__construct($data);
    }

    /**
     **已废弃，请使用header里的executeTime*
     *
     * Generated from protobuf field <code>int64 executeTime = 1;</code>
     * @return int|string
     */
    public function getExecuteTime()
    {
        return $this->executeTime;
    }

    /**
     **已废弃，请使用header里的executeTime*
     *
     * Generated from protobuf field <code>int64 executeTime = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setExecuteTime($var)
    {
        GPBUtil::checkInt64($var);
        $this->executeTime = $var;

        return $this;
    }

    /**
     **已废弃，Begin里不提供事务id*
     *
     * Generated from protobuf field <code>string transactionId = 2;</code>
     * @return string
     */
    public function getTransactionId()
    {
        return $this->transactionId;
    }

    /**
     **已废弃，Begin里不提供事务id*
     *
     * Generated from protobuf field <code>string transactionId = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setTransactionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->transactionId = $var;

        return $this;
    }

    /**
     **预留扩展*
     *
     * Generated from protobuf field <code>repeated .com.alibaba.otter.canal.protocol.Pair props = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getProps()
    {
        return $this->props;
    }

    /**
     **预留扩展*
     *
     * Generated from protobuf field <code>repeated .com.alibaba.otter.canal.protocol.Pair props = 3;</code>
     * @param array<\Com\Alibaba\Otter\Canal\Protocol\Pair>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setProps($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Com\Alibaba\Otter\Canal\Protocol\Pair::class);
        $this->props = $arr;

        return $this;
    }

    /**
     **执行的thread Id*
     *
     * Generated from protobuf field <code>int64 threadId = 4;</code>
     * @return int|string
     */
    public function getThreadId()
    {
        return $this->threadId;
    }

    /**
     **执行的thread Id*
     *
     * Generated from protobuf field <code>int64 threadId = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setThreadId($var)
    {
        GPBUtil::checkInt64($var);
        $this->threadId = $var;

        return $this;
    }

}

