<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: CanalProtocol.proto

namespace Com\Alibaba\Otter\Canal\Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>com.alibaba.otter.canal.protocol.Packet</code>
 */
class Packet extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.com.alibaba.otter.canal.protocol.PacketType type = 3;</code>
     */
    protected $type = 0;
    /**
     * Generated from protobuf field <code>bytes body = 5;</code>
     */
    protected $body = '';
    protected $magic_number_present;
    protected $version_present;
    protected $compression_present;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $magic_number
     *     @type int $version
     *     @type int $type
     *     @type int $compression
     *     @type string $body
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\CanalProtocol::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int32 magic_number = 1;</code>
     * @return int
     */
    public function getMagicNumber()
    {
        return $this->readOneof(1);
    }

    public function hasMagicNumber()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>int32 magic_number = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMagicNumber($var)
    {
        GPBUtil::checkInt32($var);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 version = 2;</code>
     * @return int
     */
    public function getVersion()
    {
        return $this->readOneof(2);
    }

    public function hasVersion()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>int32 version = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkInt32($var);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.com.alibaba.otter.canal.protocol.PacketType type = 3;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.com.alibaba.otter.canal.protocol.PacketType type = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Com\Alibaba\Otter\Canal\Protocol\PacketType::class);
        $this->type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.com.alibaba.otter.canal.protocol.Compression compression = 4;</code>
     * @return int
     */
    public function getCompression()
    {
        return $this->readOneof(4);
    }

    public function hasCompression()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.com.alibaba.otter.canal.protocol.Compression compression = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setCompression($var)
    {
        GPBUtil::checkEnum($var, \Com\Alibaba\Otter\Canal\Protocol\Compression::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>bytes body = 5;</code>
     * @return string
     */
    public function getBody()
    {
        return $this->body;
    }

    /**
     * Generated from protobuf field <code>bytes body = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setBody($var)
    {
        GPBUtil::checkString($var, False);
        $this->body = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getMagicNumberPresent()
    {
        return $this->whichOneof("magic_number_present");
    }

    /**
     * @return string
     */
    public function getVersionPresent()
    {
        return $this->whichOneof("version_present");
    }

    /**
     * @return string
     */
    public function getCompressionPresent()
    {
        return $this->whichOneof("compression_present");
    }

}

